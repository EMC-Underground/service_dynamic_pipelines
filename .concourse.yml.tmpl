---
resource_types:
  - name: github-list-repos
    type: docker-image
    source:
      repository: quay.io/coralogix/concourse-resource-github-list-repos
      tag: v0.3.1

resources:
  - name: service_dynamic_pipelines
    type: git
    source:
      uri: https://github.com/((repo-list.organization))/service_dynamic_pipelines.git
      branch: master

  - name: service_scripts
    type: git
    source:
      uri: https://github.com/((repo-list.organization))/service_scripts.git
      branch: master

  - name: every-((schedule_minutes))-minutes
    type: time
    source:
      location: America/Los_Angeles
      interval: ((schedule_minutes))m

  - name: repo-list
    type: github-list-repos
    source:
      auth_token: ((repo-list.repo_auth_token))
      org: ((repo-list.organization))
      include_regex: ((repo-list.include_regex))

jobs:
- name: job_deploy-script-pipelines
  public: true
  plan:
  - get: every-((schedule_minutes))-minutes
    trigger: true
  - get: service_dynamic_pipelines
  - get: service_scripts
  - get: repo-list
    params:
      output_format: txt
  - task: create-script-pipelines
    params:
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: nctiggy/image_seti_builder
          tag: latest
      inputs:
        - name: repo-list
        - name: service_dynamic_pipelines
        - name: service_scripts
      run:
        path: bash
        args:
        - -c
        - |
          repos=$(cat ./repo-list/repository-list.txt)
          fly -t main login -c http://concourse.((dnssuffix)) -u ((concourse_username)) -p ((concourse_password))
          fly -t main set-team --team-name ((team_name)) --local-user ((concourse_username)) --non-interactive
          for i in $repos
          do
            service_script_concourse_return=$(curl -fsSL https://raw.githubusercontent.com/((repo-list.organization))/service_scripts/master/.concourse.yml.tmpl);
            echo "$service_script_concourse_return" > pipeline.yml
            vars_yml_return=$(curl -fsSL https://raw.githubusercontent.com/((repo-list.organization))/$i/master/vars.yml)
            echo "$vars_yml_return" > vars.yml
            fly -t ((team_name)) sp -n -c pipeline.yml -p "${i}_pipeline" -l vars.yml -v repo_name=$i -v repo_url=https://github.com/((repo-list.organization))/$i
            rm pipeline.yml
            rm vars.yml
            fly -t ((team_name)) unpause-pipeline -p "${i}_pipeline"
          done

